package com.Stream.com;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Stream;

public class Demo {
public static void main(String []args) {
	List<Integer>list= Arrays.asList(9,8,7,6,5,4,4);
//	Stream<Integer>data=list.stream();
//	Stream<Integer>mappedData= data.map(n->n*2);
//	mappedData.forEach(n->System.out.println(n));
//	long count= data.count();
//	System.out.println(count);
//	Stream<Integer>sortedData=data.sorted();
//	sortedData.forEach(n->System.out.println(n));
	
	Predicate<Integer>pr=new Predicate<Integer>() {
		public boolean test(Integer n) {
			if(n%2==1)
				return true;
			else
				return false;	
		}
	};
	list.stream()
	//.filter(n->n%2==0)
	.filter(pr)
	.sorted()
	.map(n->n*3)
	.reduce(0,(c,e)->c+e)
	.forEach(n->System.out.println(n));
	
//	for(int n:list) {
//		System.out.println(n*2);
//	}
}
}
